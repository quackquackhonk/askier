#+TITLE:

* Configuration files
** gitignore

#+begin_src fundamental :tangle .gitignore
  .direnv/
#+end_src
** envrc

#+begin_src envrc-file :tangle .envrc
  use flake
#+end_src

** Flake
#+begin_src nix :tangle flake.nix
  {
    description = "A flake for running and building aSkier";
    inputs.nixpkgs.url = "github:NixOS/nixpkgs/nixpkgs-unstable";
    inputs.systems.url = "github:nix-systems/default";
    inputs.flake-utils = {
      url = "github:numtide/flake-utils";
      inputs.systems.follows = "systems";
    };

    outputs =
      { nixpkgs, flake-utils, ... }:
      flake-utils.lib.eachDefaultSystem (
        system:
        let
          pkgs = nixpkgs.legacyPackages.${system};
        in
        {
          devShells.default = pkgs.mkShell {
            packages = with pkgs; [
              zsh

              # ocaml packages
              ocamlPackages.ocaml
              ocamlPackages.dune_3
            ];
          };
        }
      );
  }
#+end_src

* Links
* Tasks
* Questions
